/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    static Map<Integer,Integer> map=new HashMap<>();
     static int index=0;
    public TreeNode buildTree(int[] preorder, int[] inorder)
    {
        for(int i=0;i<inorder.length;i++)
        {
            map.put(inorder[i],i);
        }
      //  index=0;
        return (x(preorder,inorder,0,inorder.length-1));
    }
   
    public TreeNode x(int[] preorder, int[] inorder,int start,int end)
    {
        if(start>end)
        {
            return null;
        }
        TreeNode node=new TreeNode(preorder[index]);
        index++;
         if(start==end)
        {
            return node;
        }
        int index=map.get(node.val);
        node.left=x(preorder,inorder,start,index-1);
        node.right=x(preorder,inorder,index+1,end);
        return node;
    }
}