/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2)
    {
        ArrayList<Integer> a=new ArrayList<>();
        ListNode a1=l1;
        ListNode a2=l2;
        while(a1!=null)
        {
            a.add(a1.val);
            a1=a1.next;
        }
         while(a2!=null)
        {
            a.add(a2.val);
             a2=a2.next;
        }
        Collections.sort(a);
        ListNode head=null;
         ListNode prev=null;
        for(int i:a)
        {
            ListNode x=new ListNode(i);
            if(head==null)
            {
                head=x;
                prev=head;
            }
            else
            {
                prev.next=x;
                prev=x;
            }
        }
        return head;  
    }
}